{"version":3,"file":"public/js/dist/common.bundle.js","mappings":"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","sources":["webpack://octo-print-designer/./public/js/src/ToastManager.js"],"sourcesContent":["export class ToastManager {\r\n    constructor(container) {\r\n        if (!container) throw new Error('Container element is required');\r\n        \r\n        this.container = container;\r\n        this.toastContainer = null;\r\n        \r\n        this.initialize();\r\n    }\r\n\r\n    initialize() {\r\n        this.toastContainer = document.createElement('div');\r\n        this.toastContainer.className = 'toast-container';\r\n        this.container.appendChild(this.toastContainer);\r\n    }\r\n\r\n    /**\r\n     * Show a toast message\r\n     * @param {string} message - The message to display\r\n     * @param {string} type - Type of toast (success, error, info)\r\n     * @param {Object} options - Configuration options\r\n     * @param {number|null} options.duration - Duration in ms before auto-close (null for manual close)\r\n     */\r\n    show(message, type = 'info', options = {}) {\r\n        const defaultOptions = {\r\n            duration: 1500 // null means manual close only\r\n        };\r\n\r\n        const config = { ...defaultOptions, ...options };\r\n        const toastElement = this.createToastElement(message, type, config);\r\n        \r\n        this.toastContainer.appendChild(toastElement);\r\n        \r\n        // Trigger animation\r\n        requestAnimationFrame(() => {\r\n            toastElement.classList.add('show');\r\n        });\r\n\r\n        // Set up auto-close if duration is provided\r\n        if (config.duration !== null) {\r\n            setTimeout(() => {\r\n                this.removeToast(toastElement);\r\n            }, config.duration);\r\n        }\r\n    }\r\n\r\n    createToastElement(message, type, config) {\r\n        const toast = document.createElement('div');\r\n        toast.className = `toast-item ${type}`;\r\n        \r\n        // Create icon\r\n        const icon = document.createElement('div');\r\n        icon.className = `toast-icon ${type}`;\r\n        \r\n        switch (type) {\r\n            case 'success':\r\n                icon.innerHTML = `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n                    <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path>\r\n                    <polyline points=\"22 4 12 14.01 9 11.01\"></polyline>\r\n                </svg>`;\r\n                break;\r\n            case 'error':\r\n                icon.innerHTML = `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n                    <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n                    <line x1=\"15\" y1=\"9\" x2=\"9\" y2=\"15\"></line>\r\n                    <line x1=\"9\" y1=\"9\" x2=\"15\" y2=\"15\"></line>\r\n                </svg>`;\r\n                break;\r\n            default:\r\n                icon.innerHTML = `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n                    <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n                    <line x1=\"12\" y1=\"16\" x2=\"12\" y2=\"12\"></line>\r\n                    <line x1=\"12\" y1=\"8\" x2=\"12.01\" y2=\"8\"></line>\r\n                </svg>`;\r\n        }\r\n        \r\n        // Create message container\r\n        const messageSpan = document.createElement('span');\r\n        messageSpan.className = 'toast-content';\r\n        messageSpan.textContent = message;\r\n        \r\n        // Create close button\r\n        const closeButton = document.createElement('button');\r\n        closeButton.className = 'toast-close';\r\n        closeButton.innerHTML = `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" width=\"16\" height=\"16\">\r\n            <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\r\n            <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n        </svg>`;\r\n        \r\n        closeButton.addEventListener('click', () => {\r\n            this.removeToast(toast);\r\n        });\r\n        \r\n        // Assemble toast\r\n        toast.appendChild(icon);\r\n        toast.appendChild(messageSpan);\r\n        toast.appendChild(closeButton);\r\n        \r\n        return toast;\r\n    }\r\n\r\n    removeToast(element) {\r\n        element.classList.remove('show');\r\n        \r\n        // Remove element after animation\r\n        element.addEventListener('transitionend', () => {\r\n            element.remove();\r\n        }, { once: true });\r\n    }\r\n}"],"names":["ToastManager","container","_classCallCheck","Error","toastContainer","initialize","_createClass","key","value","document","createElement","className","appendChild","show","message","_this","type","arguments","length","undefined","options","defaultOptions","duration","config","_objectSpread","toastElement","createToastElement","requestAnimationFrame","classList","add","setTimeout","removeToast","_this2","toast","concat","icon","innerHTML","messageSpan","textContent","closeButton","addEventListener","element","remove","once"],"sourceRoot":""}