{"version":3,"file":"public/js/dist/designer.bundle.js","mappings":"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","sources":["webpack://octo-print-designer/./public/js/src/Designer.js","webpack://octo-print-designer/webpack/bootstrap","webpack://octo-print-designer/webpack/runtime/chunk loaded","webpack://octo-print-designer/webpack/runtime/define property getters","webpack://octo-print-designer/webpack/runtime/hasOwnProperty shorthand","webpack://octo-print-designer/webpack/runtime/make namespace object","webpack://octo-print-designer/webpack/runtime/jsonp chunk loading","webpack://octo-print-designer/webpack/before-startup","webpack://octo-print-designer/webpack/startup","webpack://octo-print-designer/webpack/after-startup"],"sourcesContent":["import { Canvas, Image, Rect, ActiveSelection, filters, Group } from 'fabric';\r\nimport { ToastManager } from './ToastManager';\r\n\r\nexport class DesignerWidget {\r\n\r\n    constructor() {\r\n        this.container = document.querySelector('.octo-print-designer');\r\n        if (!this.container) return;\r\n\r\n        this.currentDesignId = null;\r\n        this.templates = new Map();\r\n        this.currentView = null;\r\n        this.currentVariation = null;\r\n        this.activeTemplateId = null;\r\n        \r\n        // Store view-specific images and their transforms per variation\r\n        this.variationImages = new Map(); // Key format: `${variationId}_${viewId}`\r\n\r\n        // In-memory storage for temporary images (non-logged users)\r\n        this.tempImages = [];\r\n        this.tempImageCounter = 0;\r\n        this.isLoggedIn = window.octoPrintDesigner?.isLoggedIn || false;\r\n        \r\n        window.addEventListener('resize', () => this.handleResize());\r\n\r\n        this.storeElementReferences();\r\n        this.initializeTemplates();\r\n        this.storeModalElements();\r\n        this.setupModalEvents();\r\n\r\n        this.toastManager = new ToastManager(this.toastContainer);\r\n\r\n        this.init();\r\n    }\r\n\r\n    initializeToolbar() {\r\n        // Clone toolbar template\r\n        const toolbarTemplate = document.getElementById('designer-image-toolbar-template');\r\n        this.imageToolbar = toolbarTemplate.content.cloneNode(true).querySelector('.designer-image-toolbar');\r\n        this.canvas.parentNode.appendChild(this.imageToolbar);\r\n    \r\n        // Store references to inputs\r\n        this.widthInput = this.imageToolbar.querySelector('.width-input');\r\n        this.heightInput = this.imageToolbar.querySelector('.height-input');\r\n        this.pixelToCmLabel = this.imageToolbar.querySelector('.pixel-to-cm');\r\n    \r\n        // Add toolbar button handlers\r\n        this.imageToolbar.querySelector('.center-image').addEventListener('click', () => {\r\n            const activeObject = this.fabricCanvas.getActiveObject();\r\n            if (activeObject) {\r\n                activeObject.set({\r\n                    left: this.fabricCanvas.width / 2,\r\n                    top: this.fabricCanvas.height / 2\r\n                });\r\n                \r\n                activeObject.setCoords();\r\n                this.fabricCanvas.renderAll();\r\n                \r\n                // Update stored position\r\n                if (this.currentView && this.currentVariation) {\r\n                    const key = `${this.currentVariation}_${this.currentView}`;\r\n                    const imageData = this.variationImages.get(key);\r\n                    if (imageData) {\r\n                        imageData.transform.left = activeObject.left;\r\n                        imageData.transform.top = activeObject.top;\r\n                    }\r\n                }\r\n\r\n                this.updateToolbarPosition();\r\n            }\r\n        });\r\n\r\n        // Add width/height input handlers\r\n        this.widthInput.addEventListener('input', (e) => this.handleDimensionChange('width', e.target.value));\r\n        this.heightInput.addEventListener('input', (e) => this.handleDimensionChange('height', e.target.value));\r\n        \r\n        // Rename label to clarify it shows physical dimensions\r\n        this.pixelToCmLabel.classList.add('physical-dimensions');\r\n    }\r\n\r\n    handleDimensionChange(dimension, value) {\r\n        const activeObject = this.fabricCanvas.getActiveObject();\r\n        if (!activeObject) return;\r\n\r\n        const pixelValue = parseInt(value, 10);\r\n        if (isNaN(pixelValue)) return;\r\n\r\n        const currentWidth = activeObject.width * activeObject.scaleX;\r\n        const currentHeight = activeObject.height * activeObject.scaleY;\r\n        const aspectRatio = activeObject.width / activeObject.height;\r\n\r\n        let newScaleX, newScaleY;\r\n\r\n        if (dimension === 'width') {\r\n            newScaleX = pixelValue / activeObject.width;\r\n            newScaleY = newScaleX; // Maintain aspect ratio\r\n        } else {\r\n            newScaleY = pixelValue / activeObject.height;\r\n            newScaleX = newScaleY; // Maintain aspect ratio\r\n        }\r\n\r\n        // Apply new scale\r\n        activeObject.set({\r\n            scaleX: newScaleX,\r\n            scaleY: newScaleY\r\n        });\r\n\r\n        // Update the other input\r\n        if (dimension === 'width') {\r\n            this.heightInput.value = Math.round(activeObject.height * newScaleY);\r\n        } else {\r\n            this.widthInput.value = Math.round(activeObject.width * newScaleX);\r\n        }\r\n\r\n        // Update physical dimensions display\r\n        this.updatePixelToCmConversion();\r\n\r\n        activeObject.setCoords();\r\n        this.fabricCanvas.renderAll();\r\n        this.updateToolbarPosition();\r\n        \r\n        // Store the image transformation\r\n        if (this.currentView && this.currentVariation) {\r\n            const key = `${this.currentVariation}_${this.currentView}`;\r\n            const imageData = this.variationImages.get(key);\r\n            if (imageData) {\r\n                imageData.transform.scaleX = newScaleX;\r\n                imageData.transform.scaleY = newScaleY;\r\n            }\r\n        }\r\n    }\r\n\r\n    updatePixelToCmConversion() {\r\n        // This method now updates the physical dimensions display\r\n        const activeObject = this.fabricCanvas.getActiveObject();\r\n        if (!activeObject) return;\r\n        \r\n        const template = this.templates.get(this.activeTemplateId);\r\n        if (!template) return;\r\n        \r\n        // Get physical dimensions and canvas dimensions\r\n        const physicalWidth = template.physical_width_cm || 30;\r\n        const physicalHeight = template.physical_height_cm || 40;\r\n        \r\n        const view = template.variations.get(this.currentVariation)?.views.get(this.currentView);\r\n        if (!view) return;\r\n        \r\n        const safeZoneWidth = view.safeZone?.width || 800;\r\n        const safeZoneHeight = view.safeZone?.height || 500;\r\n        \r\n        // Calculate actual physical dimensions of the design\r\n        const designWidthCm = ((activeObject.width * activeObject.scaleX) / safeZoneWidth) * physicalWidth;\r\n        const designHeightCm = ((activeObject.height * activeObject.scaleY) / safeZoneHeight) * physicalHeight;\r\n        \r\n        // Update the physical dimensions display\r\n        this.pixelToCmLabel.textContent = `${designWidthCm.toFixed(1)}cm × ${designHeightCm.toFixed(1)}cm`;\r\n    }\r\n\r\n    storeElementReferences() {\r\n        // Navigation elements\r\n        this.navItems = this.container.querySelectorAll('.designer-nav-item');\r\n        this.sectionItemsContainer = this.container.querySelector('.designer-item-sections');\r\n        this.sectionContents = this.container.querySelectorAll('.designer-item-section-content');\r\n        \r\n        // Upload zone elements\r\n        this.uploadZone = this.container.querySelector('#uploadZone');\r\n        this.uploadInput = this.container.querySelector('#uploadInput');\r\n        this.imagesGrid = this.container.querySelector('.images-grid');\r\n        this.imagesGridLimit = this.container.querySelector('.images-grid-limit');\r\n        \r\n        // Canvas elements\r\n        this.canvas = this.container.querySelector('#octo-print-designer-canvas');\r\n        this.viewsToolbar = this.container.querySelector('.views-toolbar');\r\n        \r\n        // Variation elements\r\n        this.variationsToolbar = this.container.querySelector('.variations-toolbar');\r\n        this.variationsList = this.container.querySelector('.variations-list');\r\n        \r\n        // Zoom controls\r\n        this.zoomControls = this.container.querySelector('.zoom-controls');\r\n        this.zoomInput = this.zoomControls.querySelector('input');\r\n        this.zoomButtons = this.zoomControls.querySelectorAll('button');\r\n        this.zoomPopup = this.container.querySelector('.zoom-level-popup');\r\n        this.zoomRange = this.zoomPopup.querySelector('input');\r\n\r\n        // Library section\r\n        this.libraryGrid = this.container.querySelector('[data-section=\"library\"] .images-grid');\r\n\r\n        //Designer Toolbar\r\n        this.togglePrintZoneButton = this.container.querySelector('#toggle-print-zone');\r\n\r\n        this.toastContainer = this.container.querySelector('.toast-container');\r\n    }\r\n\r\n    initializeTemplates() {\r\n        this.libraryImageTemplate = document.querySelector('#octo-print-designer-library-image-template');\r\n        this.libraryItemTemplate = document.querySelector('#octo-print-designer-library-item-template');\r\n        this.viewButtonTemplate = document.querySelector('#octo-print-designer-view-button-template');\r\n    }\r\n\r\n    async init() {\r\n\r\n        this.initializeCanvas();\r\n        this.initializeToolbar();\r\n\r\n        await Promise.all([\r\n            this.loadTemplates(),\r\n            this.loadUserImages()\r\n        ]);\r\n        \r\n        this.setupNavigationEvents();\r\n        this.setupUploadEvents();\r\n        this.setupZoomControls();\r\n        this.setupDesignerToolbar();\r\n        this.setupViewButtons();\r\n        this.updateImagesGridLimit();\r\n        this.handleResize();\r\n\r\n        this.updateZoom(100);\r\n\r\n        await this.loadInitialTemplate();\r\n        \r\n        if (!this.activeTemplateId) {\r\n            await this.loadInitialDesign();\r\n        }\r\n    }\r\n\r\n    async loadInitialDesign() {\r\n\r\n        const urlParams = new URLSearchParams(window.location.search);\r\n        const initialDesignId = urlParams.get('design_id');\r\n\r\n        if( !initialDesignId ) return false;\r\n\r\n        await this.loadDesign(initialDesignId);\r\n\r\n    }\r\n\r\n    async loadInitialTemplate() {\r\n\r\n        let templateId = this.getInitialTemplateByUrl();\r\n        if( !templateId ) templateId = this.getDefaultTemplateByData();\r\n\r\n        if( !templateId ) return;\r\n\r\n        if (templateId && this.templates.has(templateId)) {\r\n            await this.loadTemplate(templateId);\r\n            window.history.replaceState({}, '', window.location.pathname);\r\n        }\r\n    }\r\n\r\n    getInitialTemplateByUrl(){\r\n\r\n        const urlParams = new URLSearchParams(window.location.search);\r\n        const templateId = urlParams.get('template_id');\r\n\r\n        if( !templateId ) return false;\r\n\r\n        return templateId;\r\n\r\n    }\r\n\r\n    getDefaultTemplateByData(){\r\n\r\n        const dataTemplateId = this.container.dataset.defaultTemplateId;\r\n\r\n        if( !dataTemplateId ) return false;\r\n\r\n        return dataTemplateId;\r\n\r\n    }\r\n\r\n    initializeCanvas() {\r\n        this.fabricCanvas = new Canvas('octo-print-designer-canvas', {\r\n            width: this.canvas.offsetWidth,\r\n            height: this.canvas.offsetHeight,\r\n            backgroundColor: '#fff',\r\n            preserveObjectStacking: true\r\n        });\r\n    }\r\n\r\n    async loadTemplates() {\r\n        try {\r\n            const response = await fetch(octoPrintDesigner.ajaxUrl, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded',\r\n                },\r\n                body: new URLSearchParams({\r\n                    action: 'get_templates',\r\n                    nonce: octoPrintDesigner.nonce\r\n                })\r\n            });\r\n\r\n            if (!response.ok) throw new Error('Network response was not ok');\r\n\r\n            const data = await response.json();\r\n            \r\n            if (data.success) {\r\n                this.templates = this.parseTemplates(data.data);\r\n                this.renderTemplatesLibrary();\r\n            } else {\r\n                throw new Error(data.data || 'Error loading templates');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error loading templates:', error);\r\n        }\r\n    }\r\n\r\n    async loadUserImages() {\r\n        // Skip loading user images for non-logged in users\r\n        if (!this.isLoggedIn) return;\r\n        \r\n        try {\r\n            const response = await fetch(octoPrintDesigner.ajaxUrl, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded',\r\n                },\r\n                body: new URLSearchParams({\r\n                    action: 'get_user_images',\r\n                    nonce: octoPrintDesigner.nonce\r\n                })\r\n            });\r\n\r\n            if (!response.ok) throw new Error('Network response was not ok');\r\n\r\n            const data = await response.json();\r\n            \r\n            if (data.success) {\r\n                data.data.images.forEach(image => {\r\n                    this.addImageToGrid(image.url, image.id);\r\n                });\r\n            } else {\r\n                throw new Error(data.data.message || 'Error loading images');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error loading user images:', error);\r\n        }\r\n    }\r\n\r\n    parseTemplates(templates) {\r\n        const parsedTemplates = new Map();\r\n        \r\n        for (const [templateId, template] of Object.entries(templates)) {\r\n            template.variations = new Map(Object.entries(template.variations));\r\n\r\n            for (const [variationId, variation] of template.variations) {\r\n                variation.views = new Map(Object.entries(variation.views));\r\n                if(variation.is_default) template.defaultVariation = variationId;\r\n            }\r\n\r\n            parsedTemplates.set(templateId, template);\r\n        }\r\n\r\n        return parsedTemplates;\r\n    }\r\n\r\n    renderTemplatesLibrary() {\r\n        this.libraryGrid.innerHTML = '';\r\n\r\n        for (const [templateId, template] of this.templates) {\r\n            const templateElement = this.createTemplateElement(template);\r\n            templateElement.addEventListener('click', () => this.loadTemplate(templateId));\r\n            this.libraryGrid.appendChild(templateElement);\r\n        }\r\n    }\r\n\r\n    createTemplateElement(template) {\r\n        const $element = this.libraryItemTemplate.content.cloneNode(true);\r\n        const $container = $element.querySelector('.library-item');\r\n        \r\n        const $preview = $container.querySelector('.image-preview');\r\n        const $name = $container.querySelector('span');\r\n        \r\n        const defaultVariation = template.variations.get(template.defaultVariation);\r\n        const firstView = Array.from(defaultVariation.views.values())[0];\r\n        if (firstView?.image_url) $preview.src = firstView.image_url; \r\n        \r\n        $name.textContent = template.name;\r\n        \r\n        return $container;\r\n    }\r\n\r\n    setupViewButtons() {\r\n        this.viewsToolbar.innerHTML = '';\r\n    }\r\n\r\n    createViewButton(name, viewId) {\r\n        const buttonTemplate = this.viewButtonTemplate.content.cloneNode(true);\r\n        const button = buttonTemplate.querySelector('button');\r\n        button.textContent = name;\r\n        button.dataset.viewId = viewId;\r\n        button.classList.add('designer-view-button', 'designer-action-button');\r\n        return button;\r\n    }\r\n\r\n    updateViewButtons() {\r\n\r\n        const template = this.templates.get(this.activeTemplateId);     \r\n        const variation = template.variations.get(this.currentVariation);\r\n\r\n        this.viewsToolbar.innerHTML = '';\r\n        \r\n        for (const [viewId, view] of variation.views) {\r\n            const button = this.createViewButton(view.name, viewId);\r\n            this.viewsToolbar.appendChild(button);\r\n            \r\n            button.addEventListener('click', () => {\r\n                this.viewsToolbar.querySelectorAll('button').forEach(btn => btn.classList.remove('active'));\r\n                button.classList.add('active');\r\n                \r\n                this.currentView = viewId;\r\n                this.loadTemplateView(viewId);\r\n            });\r\n        }\r\n        \r\n        const firstButton = this.viewsToolbar.querySelector('button');\r\n        if (firstButton) firstButton.classList.add('active');\r\n\r\n    }\r\n\r\n    updateVariationButtons() {\r\n        const template = this.templates.get(this.activeTemplateId);\r\n\r\n        this.variationsList.innerHTML = '';\r\n        \r\n        template.variations.forEach(variation => {\r\n            const button = document.createElement('button');\r\n            button.classList.add('variation-button');\r\n            button.style.backgroundColor = variation.color;\r\n            button.dataset.variationId = variation.id;\r\n            \r\n            if (variation.is_default) button.classList.add('active');\r\n            \r\n            button.addEventListener('click', () => this.handleVariationChange(variation.id));\r\n            this.variationsList.appendChild(button);\r\n        });\r\n    }\r\n\r\n    handleVariationChange(variationId) {\r\n        this.currentVariation = variationId;\r\n        \r\n        this.variationsList.querySelectorAll('.variation-button')\r\n            .forEach(btn => btn.classList.toggle('active', btn.dataset.variationId === variationId));        \r\n\r\n        this.loadTemplateView(this.currentView);\r\n    }\r\n\r\n    async loadTemplate(templateId) {\r\n        const template = this.templates.get(templateId);     \r\n        if (!template) return;\r\n\r\n        if( this.isMobile ) this.sectionItemsContainer.classList.toggle('hidden', true);\r\n\r\n        this.activeTemplateId = templateId;\r\n        this.currentVariation = template.defaultVariation;\r\n        \r\n        this.updateVariationButtons();\r\n        this.updateViewButtons();\r\n        \r\n        const defaultVariation = template.variations.get(template.defaultVariation);\r\n        const firstViewId = Array.from(defaultVariation.views.keys())[0];\r\n        if (firstViewId) {\r\n            this.currentView = firstViewId;\r\n            await this.loadTemplateView(firstViewId);\r\n        }\r\n\r\n        this.updatePixelToCmConversion();\r\n    }\r\n\r\n    async loadTemplateView(viewId) {\r\n\r\n        if (!this.activeTemplateId) return;\r\n\r\n        const template = this.templates.get(this.activeTemplateId);\r\n        const variation = template.variations.get(this.currentVariation.toString());\r\n        const view = variation.views.get(viewId);\r\n\r\n        if (!view) return;\r\n\r\n        Image.fromURL(view.image_url).then(img => {\r\n            this.renderTemplateView(view, img); \r\n        });\r\n    }\r\n\r\n    renderTemplateView(view, fabricImage) {\r\n        // Clear existing canvas\r\n        this.fabricCanvas.clear();\r\n\r\n        this.clipMask = new Rect({\r\n            left: view.safeZone.left * this.fabricCanvas.width / 100,\r\n            top: view.safeZone.top * this.fabricCanvas.height / 100,\r\n            width: view.safeZone.width,\r\n            height: view.safeZone.height,\r\n            absolutePositioned: true,\r\n            fill: 'transparent',\r\n            selectable: false,\r\n            evented: false,\r\n            originX: 'center',\r\n            originY: 'center'\r\n        });\r\n\r\n        fabricImage.set({\r\n            ...view.imageZone,\r\n            selectable: false,\r\n            evented: false,\r\n            left: view.imageZone.left * this.fabricCanvas.width / 100,\r\n            top: view.imageZone.top * this.fabricCanvas.height / 100,\r\n            originX: 'center',\r\n            originY: 'center',\r\n        });\r\n\r\n        this.printingZoneElement = new Rect({\r\n            ...view.safeZone,\r\n            left: view.safeZone.left * this.fabricCanvas.width / 100,\r\n            top: view.safeZone.top * this.fabricCanvas.height / 100,\r\n            // fill: 'rgba(0, 124, 186, 0.2)',\r\n            fill: 'transparent',\r\n            stroke: '#007cba',\r\n            strokeWidth: 2,\r\n            strokeDashArray: [5, 5],\r\n            selectable: false,\r\n            evented: false,\r\n            originX: 'center',\r\n            originY: 'center',\r\n        });\r\n\r\n        if (view.colorOverlayEnabled) {\r\n\r\n            const template = this.templates.get(this.activeTemplateId);\r\n            const variation = template.variations.get(this.currentVariation.toString());\r\n\r\n            fabricImage.filters.push(new filters.BlendColor({\r\n                color: variation?.color,\r\n                mode: 'multiply',\r\n                alpha: view.overlayOpacity || 0.5\r\n            }));\r\n            fabricImage.applyFilters();\r\n        }\r\n\r\n        this.fabricCanvas.add(fabricImage);\r\n        if( this.isPrintingVisible ) this.fabricCanvas.add(this.printingZoneElement);\r\n\r\n        // Load saved image for this view if it exists\r\n        this.loadViewImage();\r\n    }\r\n\r\n    addImageToGrid(imageUrl, imageId, isTemporary = false) {\r\n        const template = this.libraryImageTemplate.content.cloneNode(true);\r\n        const imageItem = template.querySelector('.library-image-item');\r\n        const preview = imageItem.querySelector('.image-preview');\r\n        const removeButton = imageItem.querySelector('button');\r\n\r\n        preview.src = imageUrl;\r\n        imageItem.dataset.imageId = imageId;\r\n        imageItem.dataset.isTemporary = isTemporary ? 'true' : 'false';\r\n        \r\n        preview.addEventListener('click', () => {\r\n            if (this.isMobile) this.sectionItemsContainer.classList.toggle('hidden', true);\r\n        \r\n            Image.fromURL(imageUrl).then(img => {\r\n                const template = this.templates.get(this.activeTemplateId);\r\n                const variation = template.variations.get(this.currentVariation.toString());\r\n                const view = variation.views.get(this.currentView);\r\n                const safeZone = view.safeZone;\r\n        \r\n                const scaleX = safeZone.width / img.width;\r\n                const scaleY = safeZone.height / img.height;\r\n                const scale = Math.min(scaleX, scaleY, 1);  \r\n        \r\n                img.set({\r\n                    left: this.fabricCanvas.width / 2,\r\n                    top: this.fabricCanvas.height / 2,\r\n                    originX: 'center',\r\n                    originY: 'center',\r\n                    scaleX: scale,\r\n                    scaleY: scale,\r\n                    // Remove other styling properties that will be set in configureAndLoadFabricImage\r\n                });\r\n        \r\n                // Generate unique ID for the image\r\n                const imageId = `img_${Date.now()}_${Math.floor(Math.random() * 1000)}`;\r\n                img.data = { imageId };\r\n        \r\n                // Store the image in our data structure\r\n                this.storeViewImage(imageUrl, img);\r\n                \r\n                // Instead of adding directly to canvas, use our loading method\r\n                // which will properly apply all styles, filters, and clipping\r\n                this.loadViewImage();\r\n        \r\n                // After loading, find and select this image\r\n                const key = `${this.currentVariation}_${this.currentView}`;\r\n                const imagesArray = this.variationImages.get(key) || [];\r\n                const addedImageData = imagesArray.find(data => data.id === imageId);\r\n                \r\n                if (addedImageData && addedImageData.fabricImage) {\r\n                    this.fabricCanvas.setActiveObject(addedImageData.fabricImage);\r\n                    this.fabricCanvas.renderAll();\r\n                }\r\n            });\r\n        });\r\n\r\n        removeButton.addEventListener('click', async (e) => {\r\n            e.stopPropagation();\r\n            if (!confirm('Are you sure you want to remove this image?')) return;\r\n\r\n            if (isTemporary) {\r\n                // Remove temporary image\r\n                this.removeTempImage(imageId);\r\n                imageItem.remove();\r\n                this.updateImagesGridLimit();\r\n                \r\n                // If this image is being used in the current view, remove it\r\n                if (this.currentView && this.currentVariation) {\r\n                    const key = `${this.currentVariation}_${this.currentView}`;\r\n                    const currentImage = this.variationImages.get(key);\r\n                    if (currentImage?.url === imageUrl) this.removeViewImage();\r\n                }\r\n                return;\r\n            }\r\n\r\n            try {\r\n                const response = await fetch(octoPrintDesigner.ajaxUrl, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/x-www-form-urlencoded',\r\n                    },\r\n                    body: new URLSearchParams({\r\n                        action: 'delete_user_image',\r\n                        nonce: octoPrintDesigner.nonce,\r\n                        image_id: imageId\r\n                    })\r\n                });\r\n\r\n                if (!response.ok) throw new Error('Network response was not ok');\r\n\r\n                const data = await response.json();\r\n                \r\n                if (data.success) {\r\n                    imageItem.remove();\r\n                    this.updateImagesGridLimit();\r\n                    \r\n                    // If this image is being used in the current view, remove it\r\n                    if (this.currentView && this.currentVariation) {\r\n                        const key = `${this.currentVariation}_${this.currentView}`;\r\n                        const currentImage = this.variationImages.get(key);\r\n                        if (currentImage?.url === imageUrl) this.removeViewImage();\r\n                    }\r\n                } else {\r\n                    throw new Error(data.data.message || 'Error deleting image');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error deleting image:', error);\r\n                alert('Failed to delete image: ' + error.message);\r\n            }\r\n        });\r\n\r\n        this.imagesGrid.appendChild(imageItem);\r\n        this.updateImagesGridLimit();\r\n    }\r\n\r\n    storeViewImage(imageUrl, fabricImage) {\r\n        if (!this.currentView || !this.currentVariation) return;\r\n        \r\n        // Create a unique ID for the image\r\n        const imageId = `img_${Date.now()}_${Math.floor(Math.random() * 1000)}`;\r\n        \r\n        const imageData = {\r\n            id: imageId,\r\n            url: imageUrl,\r\n            transform: {\r\n                left: fabricImage.left,\r\n                top: fabricImage.top,\r\n                scaleX: fabricImage.scaleX,\r\n                scaleY: fabricImage.scaleY,\r\n                angle: fabricImage.angle,\r\n                width: fabricImage.width,\r\n                height: fabricImage.height\r\n            },\r\n            fabricImage: fabricImage,\r\n            visible: true\r\n        };\r\n    \r\n        const key = `${this.currentVariation}_${this.currentView}`;\r\n        \r\n        // Initialize array if needed\r\n        if (!this.variationImages.has(key)) {\r\n            this.variationImages.set(key, []);\r\n        }\r\n        \r\n        // Add to image array instead of replacing\r\n        this.variationImages.get(key).push(imageData);\r\n        \r\n        // Mark the template view as having custom images (existing code)\r\n        const template = this.templates.get(this.activeTemplateId);\r\n        const variation = template.variations.get(this.currentVariation.toString());\r\n        const view = variation.views.get(this.currentView);\r\n        view.has_custom_image = true;\r\n        \r\n        // Handle copying to other variations if this is the default variation\r\n        if (this.currentVariation != template.defaultVariation) return;\r\n    \r\n        template.variations.forEach(eachVariation => {\r\n            if (eachVariation.is_default || this.hasCustomImage(eachVariation.id)) return;\r\n    \r\n            const variationKey = `${eachVariation.id}_${this.currentView}`;\r\n            \r\n            // Initialize array if needed\r\n            if (!this.variationImages.has(variationKey)) {\r\n                this.variationImages.set(variationKey, []);\r\n            }\r\n            \r\n            // Add a deep copy of the image data (without fabricImage reference)\r\n            const imageCopy = {...imageData};\r\n            delete imageCopy.fabricImage; // We'll create a new fabric instance when loading\r\n            this.variationImages.get(variationKey).push(imageCopy);\r\n        });\r\n        \r\n        return imageId; // Return the ID so we can reference this specific image\r\n    }\r\n\r\n    removeViewImage(imageId = null) {\r\n        if (!this.currentView || !this.currentVariation) return;\r\n    \r\n        const key = `${this.currentVariation}_${this.currentView}`;\r\n        const imagesArray = this.variationImages.get(key);\r\n        \r\n        if (!imagesArray || imagesArray.length === 0) return;\r\n        \r\n        if (imageId) {\r\n            // Remove specific image by ID\r\n            const index = imagesArray.findIndex(img => img.id === imageId);\r\n            if (index !== -1) {\r\n                // Remove from canvas if it exists\r\n                const imageData = imagesArray[index];\r\n                if (imageData.fabricImage) {\r\n                    this.fabricCanvas.remove(imageData.fabricImage);\r\n                }\r\n                // Remove from array\r\n                imagesArray.splice(index, 1);\r\n            }\r\n        } else {\r\n            // Remove all images (backward compatibility)\r\n            imagesArray.forEach(imageData => {\r\n                if (imageData.fabricImage) {\r\n                    this.fabricCanvas.remove(imageData.fabricImage);\r\n                }\r\n            });\r\n            imagesArray.length = 0; // Clear the array\r\n        }\r\n        \r\n        // Update has_custom_image flag if needed\r\n        if (imagesArray.length === 0) {\r\n            const template = this.templates.get(this.activeTemplateId);\r\n            const variation = template.variations.get(this.currentVariation.toString());\r\n            const view = variation.views.get(this.currentView);\r\n            view.has_custom_image = false;\r\n            \r\n            // Also remove from other variations if this is default\r\n            if (this.currentVariation == template.defaultVariation) {\r\n                template.variations.forEach(eachVariation => {\r\n                    if (eachVariation.is_default) return;\r\n                    \r\n                    const variationKey = `${eachVariation.id}_${this.currentView}`;\r\n                    const variationImages = this.variationImages.get(variationKey);\r\n                    \r\n                    if (variationImages && variationImages.length > 0) {\r\n                        variationImages.forEach(img => {\r\n                            if (img.fabricImage) {\r\n                                this.fabricCanvas.remove(img.fabricImage);\r\n                            }\r\n                        });\r\n                        variationImages.length = 0;\r\n                    }\r\n                    \r\n                    const variationView = eachVariation.views.get(this.currentView);\r\n                    if (variationView) {\r\n                        variationView.has_custom_image = false;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        \r\n        // Render canvas to reflect changes\r\n        this.fabricCanvas.renderAll();\r\n    }\r\n\r\n    loadViewImage() {\r\n        if (!this.currentView || !this.currentVariation) return;\r\n    \r\n        const key = `${this.currentVariation}_${this.currentView}`;\r\n        const imagesArray = this.variationImages.get(key);\r\n        \r\n        if (!imagesArray || imagesArray.length === 0) return;\r\n        \r\n        // Get template and variation data for filter settings\r\n        const template = this.templates.get(this.activeTemplateId);\r\n        const variation = template.variations.get(this.currentVariation.toString());\r\n        const isDarkShirt = variation.is_dark_shirt === true;\r\n    \r\n        // Load each image\r\n        imagesArray.forEach(imageData => {\r\n            // Skip if we already have this image on canvas (avoids duplicates)\r\n            if (imageData.fabricImage && this.fabricCanvas.contains(imageData.fabricImage)) {\r\n                return;\r\n            }\r\n            \r\n            // If we have a URL but no fabric instance, create one\r\n            if (imageData.url && !imageData.fabricImage) {\r\n                Image.fromURL(imageData.url).then(img => {\r\n                    // Store the fabricImage reference\r\n                    imageData.fabricImage = img;\r\n                    \r\n                    // Apply common settings and load the image\r\n                    this.configureAndLoadFabricImage(imageData, isDarkShirt);\r\n                });\r\n            } else if (imageData.fabricImage) {\r\n                // We have a fabric instance already, just configure and add\r\n                this.configureAndLoadFabricImage(imageData, isDarkShirt);\r\n            }\r\n        });\r\n    }\r\n\r\n    configureAndLoadFabricImage(imageData, isDarkShirt) {\r\n        const img = imageData.fabricImage;\r\n        \r\n        // Reset filters\r\n        img.filters = [];\r\n        \r\n        if (isDarkShirt) {\r\n            // Settings for dark shirts (keep existing logic)\r\n            img.filters.push(\r\n                new filters.Contrast({ contrast: 0.15 }),\r\n                new filters.BlendColor({\r\n                    color: '#ffffff',\r\n                    mode: 'screen',\r\n                    alpha: 0.1\r\n                })\r\n            );\r\n    \r\n            img.applyFilters();\r\n            \r\n            img.set({\r\n                ...imageData.transform,\r\n                cornerSize: 10,\r\n                cornerStyle: 'circle',\r\n                transparentCorners: false,\r\n                cornerColor: '#007cba',\r\n                borderColor: '#007cba',\r\n                cornerStrokeColor: '#fff',\r\n                padding: 5,\r\n                globalCompositeOperation: 'screen',\r\n                preserveAspectRatio: true,\r\n                clipPath: this.clipMask,\r\n                opacity: 0.95,\r\n                visible: imageData.visible !== undefined ? imageData.visible : true\r\n            });\r\n        } else {\r\n            // Settings for light shirts (keep existing logic)\r\n            img.filters.push(\r\n                new filters.Brightness({ brightness: -0.05 }),\r\n                new filters.Contrast({ contrast: 0.1 }),\r\n                new filters.BlendColor({\r\n                    color: '#ffffff',\r\n                    mode: 'multiply',\r\n                    alpha: 0.9\r\n                })\r\n            );\r\n    \r\n            img.applyFilters();\r\n            \r\n            img.set({\r\n                ...imageData.transform,\r\n                cornerSize: 10,\r\n                cornerStyle: 'circle',\r\n                transparentCorners: false,\r\n                cornerColor: '#007cba',\r\n                borderColor: '#007cba',\r\n                cornerStrokeColor: '#fff',\r\n                padding: 5,\r\n                globalCompositeOperation: 'multiply',\r\n                preserveAspectRatio: true,\r\n                clipPath: this.clipMask,\r\n                opacity: 0.8,\r\n                visible: imageData.visible !== undefined ? imageData.visible : true\r\n            });\r\n        }\r\n    \r\n        // Bind events to this image\r\n        this.bindImageEvents(img);\r\n        \r\n        // Add to canvas\r\n        this.fabricCanvas.add(img);\r\n        img.setCoords();\r\n        \r\n        // Render canvas\r\n        this.fabricCanvas.renderAll();\r\n    }\r\n\r\n    hasCustomImage(variationId) {\r\n\r\n        const variation = this.templates.get(this.activeTemplateId).variations.get(variationId.toString());\r\n        const view = variation.views.get(this.currentView);\r\n        return view.has_custom_image;\r\n        \r\n    }\r\n\r\n    copyImageFromDefaultVariation(targetVariationId) {\r\n        const template = this.templates.get(this.activeTemplateId);\r\n        const defaultVariation = template.variations.find(v => v.is_default);\r\n        \r\n        const defaultImageData = this.variationImages.get(`${defaultVariation.id}_${this.currentView}`);\r\n        if (defaultImageData) {\r\n            this.variationImages.set(`${targetVariationId}_${this.currentView}`, {...defaultImageData});\r\n        }\r\n    }\r\n\r\n    bindImageEvents(img) {\r\n\r\n        img.on('scaling', (event) => {\r\n            // Maintain aspect ratio\r\n            if (img.scaleX !== img.scaleY) {\r\n                const avgScale = (img.scaleX + img.scaleY) / 2;\r\n                img.set({\r\n                    scaleX: avgScale,\r\n                    scaleY: avgScale\r\n                });\r\n            }\r\n            \r\n            // Update input fields during scaling\r\n            if (this.widthInput && this.heightInput) {\r\n                this.widthInput.value = Math.round(img.width * img.scaleX);\r\n                this.heightInput.value = Math.round(img.height * img.scaleY);\r\n                \r\n                // Update physical dimensions display\r\n                this.updatePixelToCmConversion();\r\n            }\r\n            \r\n            // Update toolbar position\r\n            this.updateToolbarPosition();\r\n        });\r\n\r\n        img.on('modified', () => {\r\n            // Maintain aspect ratio\r\n            if (img.scaleX !== img.scaleY) {\r\n                const avgScale = (img.scaleX + img.scaleY) / 2;\r\n                img.set({\r\n                    scaleX: avgScale,\r\n                    scaleY: avgScale\r\n                });\r\n            }\r\n    \r\n            // Update input fields\r\n            if (this.widthInput && this.heightInput) {\r\n                this.widthInput.value = Math.round(img.width * img.scaleX);\r\n                this.heightInput.value = Math.round(img.height * img.scaleY);\r\n                \r\n                // Update physical dimensions display\r\n                this.updatePixelToCmConversion();\r\n            }\r\n    \r\n            // Find and update the corresponding image data\r\n            this.updateImageTransform(img);\r\n            \r\n            this.fabricCanvas.renderAll();\r\n            this.updateToolbarPosition();\r\n        });\r\n\r\n        img.on('selected', () => {\r\n            img.set({\r\n                borderColor: '#007cba',\r\n                cornerColor: '#007cba'\r\n            });\r\n            this.showToolbar();\r\n        });\r\n\r\n        img.on('deselected', () => {\r\n            img.set({\r\n                borderColor: '#d2d2d2',\r\n                cornerColor: '#d2d2d2'\r\n            });\r\n            this.hideToolbar();\r\n        });\r\n\r\n        img.on('moving', () => {\r\n            this.updateToolbarPosition();\r\n        });\r\n    }\r\n\r\n    updateImageTransform(img) {\r\n        if (!this.currentView || !this.currentVariation) return;\r\n        \r\n        const key = `${this.currentVariation}_${this.currentView}`;\r\n        const imagesArray = this.variationImages.get(key);\r\n        \r\n        if (!imagesArray) return;\r\n        \r\n        // Find the image by reference or by ID\r\n        const imageData = imagesArray.find(data => \r\n            data.fabricImage === img || (img.data && img.data.imageId === data.id)\r\n        );\r\n        \r\n        if (imageData) {\r\n            // Update transform data\r\n            imageData.transform = {\r\n                left: img.left,\r\n                top: img.top,\r\n                scaleX: img.scaleX,\r\n                scaleY: img.scaleY,\r\n                angle: img.angle,\r\n                width: img.width,\r\n                height: img.height\r\n            };\r\n        }\r\n    }\r\n\r\n    setupNavigationEvents() {\r\n        this.navItems.forEach(item => {\r\n            item.addEventListener('click', () => {\r\n                if (item.dataset.type === 'fiverr') {\r\n                    window.open('https://fiverr.com', '_blank');\r\n                    return;\r\n                }\r\n\r\n                this.navItems.forEach(navItem => navItem.classList.remove('active'));\r\n                item.classList.add('active');\r\n\r\n                const sectionType = item.dataset.type;\r\n                this.sectionContents.forEach(section => {\r\n                    section.classList.toggle('hidden', section.dataset.section !== sectionType);\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    showToolbar() {\r\n        const activeObject = this.fabricCanvas.getActiveObject();\r\n        if (!activeObject) return;\r\n\r\n        // Update dimension inputs\r\n        this.widthInput.value = Math.round(activeObject.width * activeObject.scaleX);\r\n        this.heightInput.value = Math.round(activeObject.height * activeObject.scaleY);\r\n        \r\n        // Update physical dimensions display\r\n        this.updatePixelToCmConversion();\r\n\r\n        this.imageToolbar.classList.add('visible');\r\n        this.updateToolbarPosition();\r\n    }\r\n    \r\n    hideToolbar() {\r\n        this.imageToolbar.classList.remove('visible');\r\n    }\r\n    \r\n    updateToolbarPosition() {\r\n        const activeObject = this.fabricCanvas.getActiveObject();\r\n        if (!activeObject) return;\r\n    \r\n        // Get canvas container (wrapper) rect\r\n        const containerRect = this.canvas.parentNode.getBoundingClientRect();\r\n        \r\n        // Get object coordinates relative to canvas\r\n        const objCoords = activeObject.getBoundingRect();\r\n        const zoom = this.fabricCanvas.getZoom();\r\n        const pan = this.fabricCanvas.viewportTransform;\r\n    \r\n        // Calculate absolute position considering zoom and pan\r\n        const absoluteLeft = (objCoords.left * zoom) + pan[4];\r\n        const absoluteTop = (objCoords.top * zoom) + pan[5];\r\n        const absoluteWidth = objCoords.width * zoom;\r\n        \r\n        // Position the toolbar relative to the canvas container\r\n        this.imageToolbar.style.left = `${absoluteLeft + (absoluteWidth / 2)}px`;\r\n        this.imageToolbar.style.top = `${absoluteTop - this.imageToolbar.offsetHeight - 10}px`;\r\n    }\r\n\r\n    setupUploadEvents() {\r\n        // Setup drag and drop\r\n        this.uploadZone.addEventListener('dragover', (e) => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            this.uploadZone.style.backgroundColor = '#f8f8f8';\r\n        });\r\n\r\n        this.uploadZone.addEventListener('dragleave', (e) => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            this.uploadZone.style.backgroundColor = '';\r\n        });\r\n\r\n        this.uploadZone.addEventListener('drop', (e) => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            this.uploadZone.style.backgroundColor = '';\r\n            \r\n            const files = e.dataTransfer.files;\r\n            this.handleFileUpload(files);\r\n        });\r\n\r\n        // Setup click to upload\r\n        this.uploadZone.addEventListener('click', () => {\r\n            this.uploadInput.click();\r\n        });\r\n\r\n        this.uploadInput.addEventListener('change', (e) => {\r\n            this.handleFileUpload(e.target.files);\r\n        });\r\n    }\r\n\r\n    async handleFileUpload(files) {\r\n        if (!files.length) return;\r\n\r\n        const allowedTypes = ['image/jpeg', 'image/png'];\r\n        const maxSize = 5 * 1024 * 1024; // 5MB\r\n        const maxImages = 20; // Match server-side limit\r\n        const currentImages = this.imagesGrid.querySelectorAll('.library-image-item').length;\r\n\r\n        if (currentImages >= maxImages) {\r\n            alert('Maximum number of images reached');\r\n            return;\r\n        }\r\n\r\n        for (const file of Array.from(files)) {\r\n            // Validate file type and size\r\n            if (!allowedTypes.includes(file.type)) {\r\n                alert('Only JPG and PNG files are allowed');\r\n                continue;\r\n            }\r\n\r\n            if (file.size > maxSize) {\r\n                alert('File size must be less than 5MB');\r\n                continue;\r\n            }\r\n\r\n            if (currentImages + files.length > maxImages) {\r\n                alert(`Can only add ${maxImages - currentImages} more images`);\r\n                break;\r\n            }\r\n\r\n            // For non-logged in users, handle files in memory\r\n            if (!this.isLoggedIn) {\r\n                this.handleTempImageUpload(file);\r\n                continue;\r\n            }\r\n\r\n            try {\r\n                // Create FormData and upload to server for logged-in users\r\n                const formData = new FormData();\r\n                formData.append('action', 'upload_user_image');\r\n                formData.append('nonce', octoPrintDesigner.nonce);\r\n                formData.append('image', file);\r\n\r\n                const response = await fetch(octoPrintDesigner.ajaxUrl, {\r\n                    method: 'POST',\r\n                    body: formData\r\n                });\r\n\r\n                if (!response.ok) throw new Error('Network response was not ok');\r\n\r\n                const data = await response.json();\r\n                \r\n                if (data.success) {\r\n                    // Add image to grid with server-generated ID\r\n                    this.addImageToGrid(data.data.url, data.data.id);\r\n                } else {\r\n                    throw new Error(data.data.message || 'Error uploading image');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error uploading file:', error);\r\n                alert('Failed to upload image: ' + error.message);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Handle temporary image upload for non-logged users\r\n    handleTempImageUpload(file) {\r\n        const reader = new FileReader();\r\n        reader.onload = (e) => {\r\n            const imageUrl = e.target.result;\r\n            const tempId = `temp-${++this.tempImageCounter}`;\r\n            \r\n            // Store in tempImages array\r\n            this.tempImages.push({\r\n                id: tempId,\r\n                url: imageUrl,\r\n                file: file\r\n            });\r\n            \r\n            // Add to grid with temporary flag\r\n            this.addImageToGrid(imageUrl, tempId, true);\r\n        };\r\n        reader.readAsDataURL(file);\r\n    }\r\n\r\n    // Remove a temporary image by ID\r\n    removeTempImage(tempId) {\r\n        const index = this.tempImages.findIndex(img => img.id === tempId);\r\n        if (index !== -1) {\r\n            this.tempImages.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    updateImagesGridLimit() {\r\n        const maxImages = 25;\r\n        const currentImages = this.imagesGrid.querySelectorAll('.library-image-item').length;\r\n        this.imagesGridLimit.innerHTML = `${currentImages}/<b>${maxImages}</b>`;\r\n    }\r\n\r\n    setupDesignerToolbar(){\r\n\r\n        this.togglePrintZoneButton.addEventListener('click', () => {\r\n            this.isPrintingVisible = !this.isPrintingVisible || false;\r\n            this.togglePrintZoneButton.classList.toggle('active', this.isPrintingVisible);\r\n            if( this.isPrintingVisible ) this.fabricCanvas.add(this.printingZoneElement);\r\n            else this.fabricCanvas.remove(this.printingZoneElement);\r\n        });\r\n\r\n    }\r\n\r\n    setupZoomControls() {\r\n        let zoomTimeout;\r\n        const minZoom = 10;  // 10%\r\n        const maxZoom = 200; // 200%\r\n        const step = 10;     // 10% steps\r\n    \r\n        // Setup zoom buttons\r\n        this.zoomButtons.forEach(button => {\r\n            button.addEventListener('click', () => {\r\n                const currentZoom = parseInt(this.zoomInput.value);\r\n                const newZoom = button.dataset.zoomType === 'in' \r\n                    ? Math.min(currentZoom + step, maxZoom)\r\n                    : Math.max(currentZoom - step, minZoom);\r\n                    \r\n                this.updateZoom(newZoom);\r\n            });\r\n        });\r\n    \r\n        // Setup zoom input\r\n        this.zoomInput.addEventListener('input', (e) => {\r\n            let value = parseInt(e.target.value);\r\n            // Ensure value is within bounds\r\n            value = Math.max(minZoom, Math.min(maxZoom, value));\r\n            // Ensure value is a multiple of step\r\n            value = Math.round(value / step) * step;\r\n            this.updateZoom(value);\r\n        });\r\n    \r\n        // Setup zoom range in popup\r\n        this.zoomRange.addEventListener('input', (e) => {\r\n            this.updateZoom(parseInt(e.target.value));\r\n        });\r\n    \r\n        // Show/hide zoom popup\r\n        this.zoomInput.addEventListener('focus', () => {\r\n            clearTimeout(zoomTimeout);\r\n            this.zoomPopup.classList.remove('hidden');\r\n            this.zoomRange.focus();\r\n        });\r\n    \r\n        this.zoomRange.addEventListener('blur', () => {\r\n            zoomTimeout = setTimeout(() => {\r\n                this.zoomPopup.classList.add('hidden');\r\n            }, 200);\r\n        });\r\n    }\r\n\r\n    updateZoom(percentage) {\r\n        // Update inputs with percentage value\r\n        this.zoomInput.value = percentage;\r\n        this.zoomRange.value = percentage;\r\n        \r\n        // Convert percentage to zoom factor (100% = 1.0)\r\n        const zoom = percentage / 100;\r\n        \r\n        // Get the canvas center\r\n        const center = {\r\n            x: this.fabricCanvas.width / 2,\r\n            y: this.fabricCanvas.height / 2\r\n        };\r\n    \r\n        // Apply zoom from center\r\n        this.fabricCanvas.zoomToPoint(center, zoom);\r\n        this.fabricCanvas.renderAll();\r\n    \r\n        // Update any UI elements that depend on zoom level\r\n        if (this.imageToolbar?.classList.contains('visible')) {\r\n            this.updateToolbarPosition();\r\n        }\r\n    }\r\n\r\n    handleResize() {\r\n        \r\n        // Check if mobile view (under 950px)\r\n        this.isMobile = window.innerWidth <= 950;\r\n        \r\n        // Toggle section visibility based on viewport\r\n        if (!this.isMobile) this.sectionItemsContainer.classList.remove('hidden');\r\n        \r\n        // Add click handlers for mobile navigation\r\n        this.navItems.forEach(item => {\r\n            const originalClickHandler = item.onclick;\r\n            item.onclick = (e) => {\r\n                if (this.isMobile && item.dataset.type !== 'fiverr') this.sectionItemsContainer.classList.toggle('hidden');\r\n                if (originalClickHandler) originalClickHandler(e);\r\n            };\r\n        });\r\n    \r\n        // Reload current view to adjust positions\r\n        if (this.currentView) {\r\n            this.loadTemplateView(this.currentView);\r\n        }\r\n    }\r\n\r\n    // Add these new methods to DesignerWidget class\r\n    storeModalElements() {\r\n        this.saveDesignModal = document.getElementById('saveDesignModal');\r\n        if (!this.saveDesignModal) return;\r\n\r\n        this.modalNameInput = this.saveDesignModal.querySelector('#designName');\r\n        this.modalDesignId = this.saveDesignModal.querySelector('#designId');\r\n        this.modalSaveButton = this.saveDesignModal.querySelector('.designer-modal-save');\r\n        this.modalCancelButton = this.saveDesignModal.querySelector('.designer-modal-cancel');\r\n        this.modalCloseButton = this.saveDesignModal.querySelector('.designer-modal-close');\r\n    }\r\n\r\n    setupModalEvents() {\r\n        if (!this.saveDesignModal) return;\r\n\r\n        // Save button in footer\r\n        const saveButton = this.container.querySelector('.designer-editor footer .designer-action-button');\r\n        saveButton.addEventListener('click', () => this.showSaveModal());\r\n\r\n        // Modal events\r\n        this.modalSaveButton.addEventListener('click', () => this.saveDesign());\r\n        this.modalCancelButton.addEventListener('click', () => this.hideModal());\r\n        this.modalCloseButton.addEventListener('click', () => this.hideModal());\r\n        \r\n        // Close on overlay click\r\n        this.saveDesignModal.querySelector('.designer-modal-overlay')\r\n            .addEventListener('click', () => this.hideModal());\r\n\r\n        // Prevent modal close when clicking modal content\r\n        this.saveDesignModal.querySelector('.designer-modal-content')\r\n            .addEventListener('click', e => e.stopPropagation());\r\n    }\r\n\r\n    showSaveModal() {\r\n\r\n        if (!this.isLoggedIn) {\r\n            this.showLoginModal();\r\n            return;\r\n        }\r\n\r\n        if (!this.activeTemplateId) {\r\n            alert('Please select a template first');\r\n            return;\r\n        }\r\n\r\n        this.saveDesignModal.classList.remove('hidden');\r\n        this.modalNameInput.focus();\r\n    }\r\n\r\n    showLoginModal() {\r\n\r\n        try{\r\n            elementorProFrontend.modules.popup.showPopup( { id: 1831 } );\r\n        }catch(e){\r\n        }\r\n\r\n        // const loginModal = document.getElementById('loginRequiredModal');\r\n        // if (!loginModal) return;\r\n\r\n        // // Disable all interactions with the designer\r\n        // this.container.querySelectorAll('button, input, a').forEach(element => {\r\n        //     if (!element.closest('#loginRequiredModal')) {\r\n        //         element.style.pointerEvents = 'none';\r\n        //     }\r\n        // });\r\n\r\n        // loginModal.classList.remove('hidden');\r\n    }\r\n\r\n    hideModal() {\r\n        this.saveDesignModal.classList.remove('loading');\r\n        this.saveDesignModal.classList.add('hidden');\r\n    }\r\n\r\n    async saveDesign() {\r\n        // Skip save for non-logged users\r\n        if (!this.isLoggedIn) {\r\n            this.showLoginModal();\r\n            return;\r\n        }\r\n        \r\n        const name = this.modalNameInput.value.trim();\r\n        if (!name) {\r\n            alert('Please enter a name for your design');\r\n            return;\r\n        }\r\n    \r\n        try {\r\n            this.saveDesignModal.classList.add('loading');\r\n            \r\n            // Collect the current design state\r\n            const designData = this.collectDesignState();\r\n    \r\n            const formData = new FormData();\r\n            formData.append('action', 'save_design');\r\n            formData.append('nonce', octoPrintDesigner.nonce);\r\n            formData.append('template_id', this.activeTemplateId);\r\n            formData.append('name', name);\r\n            formData.append('design_data', JSON.stringify(designData));\r\n            \r\n            if (this.currentDesignId) {\r\n                formData.append('design_id', this.currentDesignId);\r\n                \r\n                // For existing designs, capture all view previews if we're updating the design\r\n                const previews = await this.captureAllViewsPreviews();\r\n                let viewIndex = 0;\r\n                \r\n                for (const viewId in previews) {\r\n                    const preview = previews[viewId];\r\n                    formData.append(`preview_image_${viewId}`, preview.blob, `preview_${viewId}.png`);\r\n                    formData.append(`preview_view_${viewId}`, viewId);\r\n                    formData.append(`preview_view_name_${viewId}`, preview.viewName);\r\n                    viewIndex++;\r\n                }\r\n                \r\n                formData.append('preview_count', viewIndex); // Add count of previews\r\n            } else {\r\n                // For new designs, capture all view previews\r\n                const previews = await this.captureAllViewsPreviews();\r\n                let viewIndex = 0;\r\n                \r\n                for (const viewId in previews) {\r\n                    const preview = previews[viewId];\r\n                    formData.append(`preview_image_${viewId}`, preview.blob, `preview_${viewId}.png`);\r\n                    formData.append(`preview_view_${viewId}`, viewId);\r\n                    formData.append(`preview_view_name_${viewId}`, preview.viewName);\r\n                    viewIndex++;\r\n                }\r\n                \r\n                formData.append('preview_count', viewIndex); // Add count of previews\r\n            }\r\n    \r\n            const response = await fetch(octoPrintDesigner.ajaxUrl, {\r\n                method: 'POST',\r\n                body: formData\r\n            });\r\n    \r\n            if (!response.ok) throw new Error('Network response was not ok');\r\n    \r\n            const data = await response.json();\r\n            \r\n            if (data.success) {\r\n                this.toastManager.show('Design saved!', 'success');\r\n                this.currentDesignId = data.data.design_id;\r\n    \r\n                setTimeout(() => {\r\n                    // window.location.href = data.data.redirect_url;\r\n                }, 1000);\r\n    \r\n            } else {\r\n                throw new Error(data.data.message || 'Error saving design');\r\n            }\r\n        } catch (error) {\r\n            this.toastManager.show('Error while saving the design', 'error', { duration: null });\r\n            console.error('Error saving design:', error);\r\n            alert('Failed to save design: ' + error.message);\r\n        } finally {\r\n            this.saveDesignModal.classList.remove('loading');\r\n        }\r\n    }\r\n\r\n    async loadDesign(designId) {\r\n        // Skip for non-logged users\r\n        if (!this.isLoggedIn) {\r\n            this.showLoginModal();\r\n            return;\r\n        }\r\n        \r\n        try {\r\n            const formData = new FormData();\r\n            formData.append('action', 'load_design');\r\n            formData.append('nonce', octoPrintDesigner.nonce);\r\n            formData.append('design_id', designId);\r\n\r\n            const response = await fetch(octoPrintDesigner.ajaxUrl, {\r\n                method: 'POST',\r\n                body: formData\r\n            });\r\n\r\n            if (!response.ok) throw new Error('Network response was not ok');\r\n\r\n            const data = await response.json();\r\n            \r\n            if (data.success) {\r\n                this.toastManager.show('Design loaded', 'success');\r\n                await this.applyDesignState(data.data);\r\n            } else {\r\n                throw new Error(data.data.message || 'Error loading design');\r\n            }\r\n        } catch (error) {\r\n            this.toastManager.show('Error loading the design', 'error');\r\n            console.error('Error loading design:', error);\r\n            alert('Failed to load design: ' + error.message);\r\n        }\r\n    }\r\n\r\n    collectDesignState() {\r\n        // Create an object representing the current state of the design\r\n        const state = {\r\n            templateId: this.activeTemplateId,\r\n            currentVariation: this.currentVariation,\r\n            variationImages: {}\r\n        };\r\n    \r\n        // Convert the variationImages Map to a plain object with arrays\r\n        for (const [key, imagesArray] of this.variationImages) {\r\n            if (!imagesArray || imagesArray.length === 0) continue;\r\n            \r\n            state.variationImages[key] = imagesArray.map(imageData => {\r\n                // Create a clean version without circular references\r\n                return {\r\n                    id: imageData.id,\r\n                    url: imageData.url,\r\n                    transform: {\r\n                        left: imageData.transform.left,\r\n                        top: imageData.transform.top,\r\n                        scaleX: imageData.transform.scaleX,\r\n                        scaleY: imageData.transform.scaleY,\r\n                        angle: imageData.transform.angle,\r\n                        width: imageData.transform.width || imageData.fabricImage.width,\r\n                        height: imageData.transform.height || imageData.fabricImage.height\r\n                    },\r\n                    visible: imageData.visible !== undefined ? imageData.visible : true\r\n                };\r\n            });\r\n        }\r\n    \r\n        return state;\r\n    }\r\n\r\n    async applyDesignState(design) {\r\n        const designData = JSON.parse(design.design_data);\r\n        \r\n        // Load the template first\r\n        await this.loadTemplate(designData.templateId);\r\n        \r\n        // Clear existing images\r\n        this.variationImages.clear();\r\n        \r\n        // Restore variation images - handle both formats\r\n        for (const [key, value] of Object.entries(designData.variationImages || {})) {\r\n            const [variationId, viewId] = key.split('_');\r\n            \r\n            if (Array.isArray(value)) {\r\n                // New format: array of images\r\n                for (const imageData of value) {\r\n                    await this.restoreViewImage(variationId, viewId, imageData);\r\n                }\r\n            } else {\r\n                // Old format: single image object - convert to array format\r\n                await this.restoreViewImage(variationId, viewId, value);\r\n            }\r\n        }\r\n    \r\n        // Load the template again to refresh the view\r\n        this.loadTemplate(designData.templateId);\r\n    \r\n        // Store the current design ID\r\n        this.currentDesignId = design.id;\r\n        this.modalNameInput.value = design.name;\r\n        this.modalDesignId.value = design.id;\r\n    }\r\n\r\n    async restoreViewImage(variationId, viewId, imageData) {\r\n        try {\r\n            const img = await Image.fromURL(imageData.url);\r\n            \r\n            // Set image properties\r\n            img.set({\r\n                originX: 'center',\r\n                originY: 'center',\r\n                cornerSize: 10,\r\n                cornerStyle: 'circle',\r\n                transparentCorners: false,\r\n                cornerColor: '#007cba',\r\n                borderColor: '#007cba',\r\n                cornerStrokeColor: '#fff',\r\n                padding: 5, \r\n                centeredScaling: true,\r\n                preserveAspectRatio: true,\r\n                ...imageData.transform\r\n            });\r\n            \r\n            // Store image ID in fabric object for reference\r\n            img.data = {\r\n                imageId: imageData.id || `img_${Date.now()}_${Math.floor(Math.random() * 1000)}`\r\n            };\r\n            \r\n            // Get or create key in variationImages map\r\n            const key = `${variationId}_${viewId}`;\r\n            if (!this.variationImages.has(key)) {\r\n                this.variationImages.set(key, []);\r\n            }\r\n            \r\n            // Add image to the array\r\n            this.variationImages.get(key).push({\r\n                id: img.data.imageId,\r\n                url: imageData.url,\r\n                transform: imageData.transform,\r\n                fabricImage: img,\r\n                visible: imageData.visible !== undefined ? imageData.visible : true\r\n            });\r\n            \r\n            // Bind events to the image\r\n            this.bindImageEvents(img);\r\n            \r\n            return img;\r\n        } catch (error) {\r\n            console.error('Error restoring image:', error);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    async captureCanvasPreview() {\r\n        // Create temporary canvas for preview \r\n        const tempCanvasElement = document.createElement('canvas');\r\n        const tempCanvas = new Canvas(tempCanvasElement, {\r\n            width: 500,\r\n            height: 500,\r\n            backgroundColor: 'white'\r\n        });\r\n    \r\n        try {\r\n            // Get the current template view settings\r\n            const template = this.templates.get(this.activeTemplateId);\r\n            const variation = template.variations.get(this.currentVariation.toString());\r\n            const view = variation.views.get(this.currentView);\r\n    \r\n            // Add template background with same settings as main canvas\r\n            const backgroundImage = await Image.fromURL(view.image_url);\r\n            backgroundImage.set({\r\n                ...view.imageZone,\r\n                selectable: false,\r\n                evented: false,\r\n                left: view.imageZone.left * tempCanvas.width / 100,\r\n                top: view.imageZone.top * tempCanvas.height / 100,\r\n                originX: 'center',\r\n                originY: 'center'\r\n            });\r\n    \r\n            // Add color overlay if enabled\r\n            if (view.colorOverlayEnabled) {\r\n                backgroundImage.filters.push(new filters.BlendColor({\r\n                    color: variation?.color,\r\n                    mode: 'multiply',\r\n                    alpha: view.overlayOpacity || 0.5\r\n                }));\r\n                backgroundImage.applyFilters();\r\n            }\r\n    \r\n            tempCanvas.add(backgroundImage);\r\n    \r\n            // Get current user images for this view\r\n            const key = `${this.currentVariation}_${this.currentView}`;\r\n            const imagesArray = this.variationImages.get(key) || [];\r\n            \r\n            // Calculate position adjustment factors\r\n            const widthRatio = tempCanvas.width / this.fabricCanvas.width;\r\n            const heightRatio = tempCanvas.height / this.fabricCanvas.height;\r\n    \r\n            // Create clipPath with adjusted dimensions\r\n            const clipPath = new Rect({\r\n                left: view.safeZone.left * tempCanvas.width / 100,\r\n                top: view.safeZone.top * tempCanvas.height / 100,\r\n                width: view.safeZone.width,\r\n                height: view.safeZone.height,\r\n                absolutePositioned: true,\r\n                fill: 'transparent',\r\n                selectable: false,\r\n                evented: false,\r\n                originX: 'center',\r\n                originY: 'center'\r\n            });\r\n    \r\n            // Add each image to the preview canvas\r\n            for (const imageData of imagesArray) {\r\n                if (!imageData.visible || !imageData.url) continue;\r\n                \r\n                // Load the image\r\n                const userImage = await Image.fromURL(imageData.url);\r\n                \r\n                // Set position and transformation\r\n                userImage.set({\r\n                    left: imageData.transform.left * widthRatio,\r\n                    top: imageData.transform.top * heightRatio,\r\n                    scaleX: imageData.transform.scaleX,\r\n                    scaleY: imageData.transform.scaleY,\r\n                    angle: imageData.transform.angle || 0,\r\n                    originX: 'center',\r\n                    originY: 'center',\r\n                    clipPath: clipPath\r\n                });\r\n                \r\n                // Apply dark/light shirt filters if needed\r\n                const isDarkShirt = variation.is_dark_shirt === true;\r\n                if (isDarkShirt) {\r\n                    userImage.filters.push(\r\n                        new filters.Contrast({ contrast: 0.15 }),\r\n                        new filters.BlendColor({\r\n                            color: '#ffffff',\r\n                            mode: 'screen',\r\n                            alpha: 0.1\r\n                        })\r\n                    );\r\n                    userImage.set({\r\n                        globalCompositeOperation: 'screen',\r\n                        opacity: 0.95\r\n                    });\r\n                } else {\r\n                    userImage.filters.push(\r\n                        new filters.Brightness({ brightness: -0.05 }),\r\n                        new filters.Contrast({ contrast: 0.1 }),\r\n                        new filters.BlendColor({\r\n                            color: '#ffffff',\r\n                            mode: 'multiply',\r\n                            alpha: 0.9\r\n                        })\r\n                    );\r\n                    userImage.set({\r\n                        globalCompositeOperation: 'multiply',\r\n                        opacity: 0.8\r\n                    });\r\n                }\r\n                \r\n                userImage.applyFilters();\r\n                tempCanvas.add(userImage);\r\n            }\r\n    \r\n            tempCanvas.renderAll();\r\n            return tempCanvas.toDataURL({\r\n                format: 'png',\r\n                quality: 0.8\r\n            });\r\n    \r\n        } finally {\r\n            tempCanvas.dispose();\r\n        }\r\n    }\r\n\r\n    async captureAllViewsPreviews() {\r\n        // Get the current template and variation\r\n        const template = this.templates.get(this.activeTemplateId);\r\n        console.log(template);\r\n        if (!template) return {};\r\n        \r\n        const variation = template.variations.get(this.currentVariation.toString());\r\n        console.log(variation); \r\n        if (!variation) return {};\r\n        \r\n        // Store the current view so we can restore it later\r\n        const originalView = this.currentView;\r\n        \r\n        // Object to store all previews\r\n        const previews = {};\r\n        \r\n        // Capture preview for each view\r\n        for (const [viewId, view] of variation.views) {\r\n            // Set current view to capture\r\n            this.currentView = viewId;\r\n            \r\n            // Capture the preview\r\n            const previewDataUrl = await this.captureCanvasPreview();\r\n            \r\n            // Convert data URL to blob\r\n            const blob = await (await fetch(previewDataUrl)).blob();\r\n            \r\n            // Store the preview\r\n            previews[viewId] = {\r\n                viewId: viewId,\r\n                viewName: view.name,\r\n                blob: blob\r\n            };\r\n        }\r\n        \r\n        // Restore the original view\r\n        this.currentView = originalView;\r\n        \r\n        return previews;\r\n    }\r\n\r\n}\r\n\r\n// Initialize the designer widget when DOM is ready\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    new DesignerWidget();\r\n});","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"public/js/dist/designer\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkocto_print_designer\"] = self[\"webpackChunkocto_print_designer\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"public/js/dist/common\",\"public/js/dist/vendor\"], () => (__webpack_require__(\"./public/js/src/Designer.js\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","_classCallCheck","_defineProperties","_toPropertyKey","key","_createClass","_toPrimitive","toPrimitive","String","Number","Canvas","Image","Rect","ActiveSelection","filters","Group","ToastManager","DesignerWidget","_window$octoPrintDesi","_this","container","document","querySelector","currentDesignId","templates","Map","currentView","currentVariation","activeTemplateId","variationImages","tempImages","tempImageCounter","isLoggedIn","window","octoPrintDesigner","addEventListener","handleResize","storeElementReferences","initializeTemplates","storeModalElements","setupModalEvents","toastManager","toastContainer","init","initializeToolbar","_this2","toolbarTemplate","getElementById","imageToolbar","content","cloneNode","canvas","parentNode","appendChild","widthInput","heightInput","pixelToCmLabel","activeObject","fabricCanvas","getActiveObject","set","left","width","top","height","setCoords","renderAll","concat","imageData","get","transform","updateToolbarPosition","handleDimensionChange","target","classList","add","dimension","pixelValue","parseInt","currentWidth","scaleX","currentHeight","scaleY","aspectRatio","newScaleX","newScaleY","Math","round","updatePixelToCmConversion","_template$variations$","_view$safeZone","_view$safeZone2","template","physicalWidth","physical_width_cm","physicalHeight","physical_height_cm","view","variations","views","safeZoneWidth","safeZone","safeZoneHeight","designWidthCm","designHeightCm","textContent","toFixed","navItems","querySelectorAll","sectionItemsContainer","sectionContents","uploadZone","uploadInput","imagesGrid","imagesGridLimit","viewsToolbar","variationsToolbar","variationsList","zoomControls","zoomInput","zoomButtons","zoomPopup","zoomRange","libraryGrid","togglePrintZoneButton","libraryImageTemplate","libraryItemTemplate","viewButtonTemplate","_init","_callee","_callee$","_context","initializeCanvas","all","loadTemplates","loadUserImages","setupNavigationEvents","setupUploadEvents","setupZoomControls","setupDesignerToolbar","setupViewButtons","updateImagesGridLimit","updateZoom","loadInitialTemplate","loadInitialDesign","_loadInitialDesign","_callee2","urlParams","initialDesignId","_callee2$","_context2","URLSearchParams","location","search","loadDesign","_loadInitialTemplate","_callee3","templateId","_callee3$","_context3","getInitialTemplateByUrl","getDefaultTemplateByData","has","loadTemplate","history","replaceState","pathname","dataTemplateId","dataset","defaultTemplateId","offsetWidth","offsetHeight","backgroundColor","preserveObjectStacking","_loadTemplates","_callee4","response","data","_callee4$","_context4","fetch","ajaxUrl","headers","body","action","nonce","ok","json","success","parseTemplates","renderTemplatesLibrary","t0","console","error","_loadUserImages","_callee5","_this3","_callee5$","_context5","images","image","addImageToGrid","url","id","message","parsedTemplates","_i","_Object$entries","entries","_Object$entries$_i","_slicedToArray","_iterator","_createForOfIteratorHelper","_step","_step$value","variationId","variation","is_default","defaultVariation","err","_this4","innerHTML","_iterator2","_step2","_loop","_step2$value","templateElement","createTemplateElement","$element","$container","$preview","$name","firstView","Array","from","image_url","src","createViewButton","viewId","buttonTemplate","button","updateViewButtons","_this5","_iterator3","_step3","_loop2","_step3$value","btn","remove","loadTemplateView","firstButton","updateVariationButtons","_this6","createElement","style","color","handleVariationChange","toggle","_loadTemplate","_callee6","firstViewId","_callee6$","_context6","isMobile","_x","_loadTemplateView","_callee7","_this7","_callee7$","_context7","toString","fromURL","img","renderTemplateView","_x2","fabricImage","clear","clipMask","absolutePositioned","fill","selectable","evented","originX","originY","_objectSpread","imageZone","printingZoneElement","stroke","strokeWidth","strokeDashArray","colorOverlayEnabled","BlendColor","mode","alpha","overlayOpacity","applyFilters","isPrintingVisible","loadViewImage","imageUrl","imageId","_this8","isTemporary","undefined","imageItem","preview","removeButton","scale","min","Date","now","floor","random","storeViewImage","imagesArray","addedImageData","find","setActiveObject","_ref","_callee8","currentImage","_key","_currentImage","_callee8$","_context8","stopPropagation","confirm","removeTempImage","removeViewImage","image_id","alert","_x3","_this9","angle","visible","has_custom_image","eachVariation","hasCustomImage","variationKey","imageCopy","_this10","index","findIndex","splice","variationView","_this11","isDarkShirt","is_dark_shirt","contains","configureAndLoadFabricImage","Contrast","contrast","cornerSize","cornerStyle","transparentCorners","cornerColor","borderColor","cornerStrokeColor","padding","globalCompositeOperation","preserveAspectRatio","clipPath","opacity","Brightness","brightness","bindImageEvents","copyImageFromDefaultVariation","targetVariationId","defaultImageData","_this12","on","event","avgScale","updateImageTransform","showToolbar","hideToolbar","_this13","item","open","navItem","sectionType","section","containerRect","getBoundingClientRect","objCoords","getBoundingRect","zoom","getZoom","pan","viewportTransform","absoluteLeft","absoluteTop","absoluteWidth","_this14","preventDefault","files","dataTransfer","handleFileUpload","click","_handleFileUpload","_callee9","allowedTypes","maxSize","maxImages","currentImages","_i2","_Array$from","file","formData","_callee9$","_context9","includes","size","handleTempImageUpload","FormData","append","_x4","_this15","reader","FileReader","onload","result","tempId","readAsDataURL","_this16","_this17","zoomTimeout","minZoom","maxZoom","step","currentZoom","newZoom","zoomType","max","clearTimeout","focus","setTimeout","percentage","_this$imageToolbar","center","x","zoomToPoint","_this18","innerWidth","originalClickHandler","onclick","saveDesignModal","modalNameInput","modalDesignId","modalSaveButton","modalCancelButton","modalCloseButton","_this19","saveButton","showSaveModal","saveDesign","hideModal","showLoginModal","elementorProFrontend","modules","popup","showPopup","_saveDesign","_callee10","designData","previews","viewIndex","_previews","_viewIndex","_viewId","_preview","_callee10$","_context10","trim","collectDesignState","JSON","stringify","captureAllViewsPreviews","blob","viewName","show","design_id","duration","_loadDesign","_callee11","designId","_callee11$","_context11","applyDesignState","_x5","state","_iterator4","_step4","_step4$value","map","_applyDesignState","_callee12","design","_i3","_Object$entries2","_Object$entries2$_i","_key$split","_key$split2","_iterator5","_step5","_callee12$","_context12","parse","design_data","split","isArray","restoreViewImage","_x6","_restoreViewImage","_callee13","_callee13$","_context13","centeredScaling","_x7","_x8","_x9","_captureCanvasPreview","_callee14","tempCanvasElement","tempCanvas","backgroundImage","widthRatio","heightRatio","_iterator6","_step6","userImage","_callee14$","_context14","toDataURL","format","quality","dispose","captureCanvasPreview","_captureAllViewsPreviews","_callee15","originalView","_iterator7","_step7","_step7$value","previewDataUrl","_callee15$","_context15","log"],"sourceRoot":""}